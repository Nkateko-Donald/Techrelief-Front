"use client";
//import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import Header from "../components/Header";
import Sidebar from "../components/Sidebar";
import { usePathname } from "next/navigation";
import useKaiAdminInit from "@/hooks/useKaiAdminInit";
import { AuthProvider } from "@/context/AuthContext";
import { NotificationProvider } from "@/context/NotificationContext";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});
{
  /*
export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
}; */
}

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  // Reâ€‘init KaiAdmin behaviors after client nav
  useKaiAdminInit();
  const pathname = usePathname();
  const isAuthPage =
    pathname === "/login" ||
    pathname === "/register" ||
    pathname === "/Welcome";

  return (
    <html lang="en">
      <head>
        <link rel="stylesheet" href="/css/bootstrap.min.css" />
        <link rel="stylesheet" href="/css/plugins.min.css" />
        <link rel="stylesheet" href="/css/kaiadmin.min.css" />
        <link rel="stylesheet" href="/css/demo.css" />
        <link rel="stylesheet" href="/css/fonts.min.css" />

        <script src="/js/kaiadmin.min.js" defer></script>
        <script src="/js/demo.js" defer></script>
        <script src="/js/kaiadmin.min.js" defer></script>
        <script src="/js/setting-demo.js" defer></script>
        <script src="/js/setting-demo2.js" defer></script>

        <script
          src="https://code.jquery.com/jquery-3.7.1.min.js"
          integrity="sha256-..."
          crossOrigin="anonymous"
          defer
        ></script>

        <script
          dangerouslySetInnerHTML={{
            __html: `
              WebFont.load({
                google: { families: ["Public Sans:300,400,500,600,700"] },
                custom: {
                  families: [
                    "Font Awesome 5 Solid",
                    "Font Awesome 5 Regular",
                    "Font Awesome 5 Brands",
                    "simple-line-icons"
                  ],
                  urls: ["/css/fonts.min.css"]
                },
                active: function () {
                  sessionStorage.fonts = true;
                }
              });
            `,
          }}
        />
      </head>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <AuthProvider>
          <NotificationProvider>
            {isAuthPage ? (
              <main>{children}</main>
            ) : (
              <>
                <div className="wrapper">
                  <Sidebar />
                  <div className="main-panel">
                    <Header />
                    <div className="container">
                      <main>{children}</main>
                    </div>
                  </div>
                </div>
                {/*<Footer />*/}
              </>
            )}
          </NotificationProvider>
        </AuthProvider>
      </body>
    </html>
  );
}
